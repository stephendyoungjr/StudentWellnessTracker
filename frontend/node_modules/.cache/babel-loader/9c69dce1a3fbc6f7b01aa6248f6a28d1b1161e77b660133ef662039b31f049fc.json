{"ast":null,"code":"import React,{useState}from'react';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler,TimeScale}from'chart.js';import annotationPlugin from'chartjs-plugin-annotation';import'chartjs-adapter-date-fns';// Import date adapter for time scale\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,Filler,TimeScale,annotationPlugin);const MoodChart=_ref=>{let{data}=_ref;const[timeScale,setTimeScale]=useState('days');// Default time scale\nconst getChartData=scale=>{let range;switch(scale){case'weeks':range=30;// Show a month (30 days)\nbreak;case'months':range=365;// Show a year (365 days)\nbreak;default:range=14;// Show 2 weeks (14 days)\n}const chartData=[];for(let i=-range/2;i<=range/2;i++){const currentDate=new Date();currentDate.setDate(currentDate.getDate()+i);const dateStr=currentDate.toISOString().split('T')[0];const entry=data.find(entry=>entry.date===dateStr);let burnoutScore=entry?entry.burnoutScore:null;if(!burnoutScore&&i>0&&chartData.length>0){const previousScore=chartData[chartData.length-1].burnoutScore;burnoutScore=Math.max(previousScore-0.5,0);// Gradual recovery\n}chartData.push({date:dateStr,burnoutScore:burnoutScore||0});}return{labels:chartData.map(entry=>entry.date),datasets:[{label:'Burnout Likelihood Over Time',data:chartData.map(entry=>entry.burnoutScore),fill:'start',backgroundColor:'rgba(255, 99, 132, 0.2)',borderColor:'rgb(255, 99, 132)',tension:0.1}]};};const chartData=getChartData(timeScale);const options={scales:{y:{beginAtZero:true,title:{display:true,text:'Burnout Likelihood Score'}},x:{title:{display:true,text:'Date'},type:'time',// Use the time scale here\ntime:{unit:timeScale==='days'?'day':timeScale==='weeks'?'week':'month'}}},plugins:{tooltip:{callbacks:{label:function(tooltipItem){const score=tooltipItem.raw;let riskLevel='Low Risk';if(score>=10)riskLevel='High Risk';else if(score>=7)riskLevel='Moderate Risk';return`Burnout Score: ${score} (${riskLevel})`;}}},annotation:{annotations:{thresholdLine:{type:'line',yMin:10,yMax:10,borderColor:'rgb(255, 165, 0)',borderWidth:2,label:{content:'High Burnout Risk Threshold',enabled:true,position:'center',backgroundColor:'rgba(255, 165, 0, 0.7)'}},...chartData.datasets[0].data.reduce((annotations,score,index)=>{if(score>=10){annotations[`burnoutPoint${index}`]={type:'point',xValue:chartData.labels[index],yValue:score,backgroundColor:'rgb(255, 99, 132)',radius:5,label:{content:`Burnout Risk on ${chartData.labels[index]}`,enabled:true,position:'top'}};}return annotations;},{})}}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"period-selector\",children:[/*#__PURE__*/_jsx(\"button\",{className:`period-button ${timeScale==='days'?'active':''}`,onClick:()=>setTimeScale('days'),children:\"Days\"}),/*#__PURE__*/_jsx(\"button\",{className:`period-button ${timeScale==='weeks'?'active':''}`,onClick:()=>setTimeScale('weeks'),children:\"Weeks\"}),/*#__PURE__*/_jsx(\"button\",{className:`period-button ${timeScale==='months'?'active':''}`,onClick:()=>setTimeScale('months'),children:\"Months\"})]}),/*#__PURE__*/_jsx(Line,{data:chartData,options:options})]});};export default MoodChart;","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","TimeScale","annotationPlugin","jsx","_jsx","jsxs","_jsxs","register","MoodChart","_ref","data","timeScale","setTimeScale","getChartData","scale","range","chartData","i","currentDate","Date","setDate","getDate","dateStr","toISOString","split","entry","find","date","burnoutScore","length","previousScore","Math","max","push","labels","map","datasets","label","fill","backgroundColor","borderColor","tension","options","scales","y","beginAtZero","title","display","text","x","type","time","unit","plugins","tooltip","callbacks","tooltipItem","score","raw","riskLevel","annotation","annotations","thresholdLine","yMin","yMax","borderWidth","content","enabled","position","reduce","index","xValue","yValue","radius","children","className","onClick"],"sources":["/Users/stephen/Desktop/student-wellness-tracker/frontend/src/components/MoodChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  TimeScale,\n} from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport 'chartjs-adapter-date-fns'; // Import date adapter for time scale\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  TimeScale,\n  annotationPlugin\n);\n\nconst MoodChart = ({ data }) => {\n  const [timeScale, setTimeScale] = useState('days'); // Default time scale\n\n  const getChartData = (scale) => {\n    let range;\n    switch (scale) {\n      case 'weeks':\n        range = 30; // Show a month (30 days)\n        break;\n      case 'months':\n        range = 365; // Show a year (365 days)\n        break;\n      default:\n        range = 14; // Show 2 weeks (14 days)\n    }\n\n    const chartData = [];\n    for (let i = -range / 2; i <= range / 2; i++) {\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + i);\n\n      const dateStr = currentDate.toISOString().split('T')[0];\n\n      const entry = data.find((entry) => entry.date === dateStr);\n      let burnoutScore = entry ? entry.burnoutScore : null;\n\n      if (!burnoutScore && i > 0 && chartData.length > 0) {\n        const previousScore = chartData[chartData.length - 1].burnoutScore;\n        burnoutScore = Math.max(previousScore - 0.5, 0); // Gradual recovery\n      }\n\n      chartData.push({\n        date: dateStr,\n        burnoutScore: burnoutScore || 0,\n      });\n    }\n\n    return {\n      labels: chartData.map((entry) => entry.date),\n      datasets: [\n        {\n          label: 'Burnout Likelihood Over Time',\n          data: chartData.map((entry) => entry.burnoutScore),\n          fill: 'start',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  const chartData = getChartData(timeScale);\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Burnout Likelihood Score',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date',\n        },\n        type: 'time', // Use the time scale here\n        time: {\n          unit: timeScale === 'days' ? 'day' : timeScale === 'weeks' ? 'week' : 'month',\n        },\n      },\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const score = tooltipItem.raw;\n            let riskLevel = 'Low Risk';\n            if (score >= 10) riskLevel = 'High Risk';\n            else if (score >= 7) riskLevel = 'Moderate Risk';\n            return `Burnout Score: ${score} (${riskLevel})`;\n          },\n        },\n      },\n      annotation: {\n        annotations: {\n          thresholdLine: {\n            type: 'line',\n            yMin: 10,\n            yMax: 10,\n            borderColor: 'rgb(255, 165, 0)',\n            borderWidth: 2,\n            label: {\n              content: 'High Burnout Risk Threshold',\n              enabled: true,\n              position: 'center',\n              backgroundColor: 'rgba(255, 165, 0, 0.7)',\n            },\n          },\n          ...chartData.datasets[0].data.reduce((annotations, score, index) => {\n            if (score >= 10) {\n              annotations[`burnoutPoint${index}`] = {\n                type: 'point',\n                xValue: chartData.labels[index],\n                yValue: score,\n                backgroundColor: 'rgb(255, 99, 132)',\n                radius: 5,\n                label: {\n                  content: `Burnout Risk on ${chartData.labels[index]}`,\n                  enabled: true,\n                  position: 'top',\n                },\n              };\n            }\n            return annotations;\n          }, {}),\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <div className=\"period-selector\">\n        <button\n          className={`period-button ${timeScale === 'days' ? 'active' : ''}`}\n          onClick={() => setTimeScale('days')}\n        >\n          Days\n        </button>\n        <button\n          className={`period-button ${timeScale === 'weeks' ? 'active' : ''}`}\n          onClick={() => setTimeScale('weeks')}\n        >\n          Weeks\n        </button>\n        <button\n          className={`period-button ${timeScale === 'months' ? 'active' : ''}`}\n          onClick={() => setTimeScale('months')}\n        >\n          Months\n        </button>\n      </div>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default MoodChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}