{"ast":null,"code":"var _jsxFileName = \"/Users/stephen/Desktop/student-wellness-tracker/frontend/src/components/MoodChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler, TimeScale } from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport 'chartjs-adapter-date-fns'; // Import date adapter for time scale\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler, TimeScale, annotationPlugin);\nconst MoodChart = ({\n  data\n}) => {\n  _s();\n  const [timeScale, setTimeScale] = useState('days'); // Default time scale\n\n  const getChartData = scale => {\n    let range;\n    switch (scale) {\n      case 'weeks':\n        range = 30; // Show a month (30 days)\n        break;\n      case 'months':\n        range = 365; // Show a year (365 days)\n        break;\n      default:\n        range = 14;\n      // Show 2 weeks (14 days)\n    }\n    const chartData = [];\n    for (let i = -range / 2; i <= range / 2; i++) {\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + i);\n      const dateStr = currentDate.toISOString().split('T')[0];\n      const entry = data.find(entry => entry.date === dateStr);\n      let burnoutScore = entry ? entry.burnoutScore : null;\n      if (!burnoutScore && i > 0 && chartData.length > 0) {\n        const previousScore = chartData[chartData.length - 1].burnoutScore;\n        burnoutScore = Math.max(previousScore - 0.5, 0); // Gradual recovery\n      }\n      chartData.push({\n        date: dateStr,\n        burnoutScore: burnoutScore || 0\n      });\n    }\n    return {\n      labels: chartData.map(entry => entry.date),\n      datasets: [{\n        label: 'Burnout Likelihood Over Time',\n        data: chartData.map(entry => entry.burnoutScore),\n        fill: 'start',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgb(255, 99, 132)',\n        tension: 0.1\n      }]\n    };\n  };\n  const chartData = getChartData(timeScale);\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Burnout Likelihood Score'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date'\n        },\n        type: 'time',\n        // Use the time scale here\n        time: {\n          unit: timeScale === 'days' ? 'day' : timeScale === 'weeks' ? 'week' : 'month'\n        }\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const score = tooltipItem.raw;\n            let riskLevel = 'Low Risk';\n            if (score >= 10) riskLevel = 'High Risk';else if (score >= 7) riskLevel = 'Moderate Risk';\n            return `Burnout Score: ${score} (${riskLevel})`;\n          }\n        }\n      },\n      annotation: {\n        annotations: {\n          thresholdLine: {\n            type: 'line',\n            yMin: 10,\n            yMax: 10,\n            borderColor: 'rgb(255, 165, 0)',\n            borderWidth: 2,\n            label: {\n              content: 'High Burnout Risk Threshold',\n              enabled: true,\n              position: 'center',\n              backgroundColor: 'rgba(255, 165, 0, 0.7)'\n            }\n          },\n          ...chartData.datasets[0].data.reduce((annotations, score, index) => {\n            if (score >= 10) {\n              annotations[`burnoutPoint${index}`] = {\n                type: 'point',\n                xValue: chartData.labels[index],\n                yValue: score,\n                backgroundColor: 'rgb(255, 99, 132)',\n                radius: 5,\n                label: {\n                  content: `Burnout Risk on ${chartData.labels[index]}`,\n                  enabled: true,\n                  position: 'top'\n                }\n              };\n            }\n            return annotations;\n          }, {})\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"period-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `period-button ${timeScale === 'days' ? 'active' : ''}`,\n        onClick: () => setTimeScale('days'),\n        children: \"Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `period-button ${timeScale === 'weeks' ? 'active' : ''}`,\n        onClick: () => setTimeScale('weeks'),\n        children: \"Weeks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `period-button ${timeScale === 'months' ? 'active' : ''}`,\n        onClick: () => setTimeScale('months'),\n        children: \"Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodChart, \"DkwHj+rRayhS/f8YebsgXiMLDNY=\");\n_c = MoodChart;\nexport default MoodChart;\nvar _c;\n$RefreshReg$(_c, \"MoodChart\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","TimeScale","annotationPlugin","jsxDEV","_jsxDEV","register","MoodChart","data","_s","timeScale","setTimeScale","getChartData","scale","range","chartData","i","currentDate","Date","setDate","getDate","dateStr","toISOString","split","entry","find","date","burnoutScore","length","previousScore","Math","max","push","labels","map","datasets","label","fill","backgroundColor","borderColor","tension","options","scales","y","beginAtZero","title","display","text","x","type","time","unit","plugins","tooltip","callbacks","tooltipItem","score","raw","riskLevel","annotation","annotations","thresholdLine","yMin","yMax","borderWidth","content","enabled","position","reduce","index","xValue","yValue","radius","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stephen/Desktop/student-wellness-tracker/frontend/src/components/MoodChart.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  TimeScale,\n} from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport 'chartjs-adapter-date-fns'; // Import date adapter for time scale\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  TimeScale,\n  annotationPlugin\n);\n\nconst MoodChart = ({ data }) => {\n  const [timeScale, setTimeScale] = useState('days'); // Default time scale\n\n  const getChartData = (scale) => {\n    let range;\n    switch (scale) {\n      case 'weeks':\n        range = 30; // Show a month (30 days)\n        break;\n      case 'months':\n        range = 365; // Show a year (365 days)\n        break;\n      default:\n        range = 14; // Show 2 weeks (14 days)\n    }\n\n    const chartData = [];\n    for (let i = -range / 2; i <= range / 2; i++) {\n      const currentDate = new Date();\n      currentDate.setDate(currentDate.getDate() + i);\n\n      const dateStr = currentDate.toISOString().split('T')[0];\n\n      const entry = data.find((entry) => entry.date === dateStr);\n      let burnoutScore = entry ? entry.burnoutScore : null;\n\n      if (!burnoutScore && i > 0 && chartData.length > 0) {\n        const previousScore = chartData[chartData.length - 1].burnoutScore;\n        burnoutScore = Math.max(previousScore - 0.5, 0); // Gradual recovery\n      }\n\n      chartData.push({\n        date: dateStr,\n        burnoutScore: burnoutScore || 0,\n      });\n    }\n\n    return {\n      labels: chartData.map((entry) => entry.date),\n      datasets: [\n        {\n          label: 'Burnout Likelihood Over Time',\n          data: chartData.map((entry) => entry.burnoutScore),\n          fill: 'start',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgb(255, 99, 132)',\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  const chartData = getChartData(timeScale);\n\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Burnout Likelihood Score',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Date',\n        },\n        type: 'time', // Use the time scale here\n        time: {\n          unit: timeScale === 'days' ? 'day' : timeScale === 'weeks' ? 'week' : 'month',\n        },\n      },\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            const score = tooltipItem.raw;\n            let riskLevel = 'Low Risk';\n            if (score >= 10) riskLevel = 'High Risk';\n            else if (score >= 7) riskLevel = 'Moderate Risk';\n            return `Burnout Score: ${score} (${riskLevel})`;\n          },\n        },\n      },\n      annotation: {\n        annotations: {\n          thresholdLine: {\n            type: 'line',\n            yMin: 10,\n            yMax: 10,\n            borderColor: 'rgb(255, 165, 0)',\n            borderWidth: 2,\n            label: {\n              content: 'High Burnout Risk Threshold',\n              enabled: true,\n              position: 'center',\n              backgroundColor: 'rgba(255, 165, 0, 0.7)',\n            },\n          },\n          ...chartData.datasets[0].data.reduce((annotations, score, index) => {\n            if (score >= 10) {\n              annotations[`burnoutPoint${index}`] = {\n                type: 'point',\n                xValue: chartData.labels[index],\n                yValue: score,\n                backgroundColor: 'rgb(255, 99, 132)',\n                radius: 5,\n                label: {\n                  content: `Burnout Risk on ${chartData.labels[index]}`,\n                  enabled: true,\n                  position: 'top',\n                },\n              };\n            }\n            return annotations;\n          }, {}),\n        },\n      },\n    },\n  };\n\n  return (\n    <div>\n      <div className=\"period-selector\">\n        <button\n          className={`period-button ${timeScale === 'days' ? 'active' : ''}`}\n          onClick={() => setTimeScale('days')}\n        >\n          Days\n        </button>\n        <button\n          className={`period-button ${timeScale === 'weeks' ? 'active' : ''}`}\n          onClick={() => setTimeScale('weeks')}\n        >\n          Weeks\n        </button>\n        <button\n          className={`period-button ${timeScale === 'months' ? 'active' : ''}`}\n          onClick={() => setTimeScale('months')}\n        >\n          Months\n        </button>\n      </div>\n      <Line data={chartData} options={options} />\n    </div>\n  );\n};\n\nexport default MoodChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}