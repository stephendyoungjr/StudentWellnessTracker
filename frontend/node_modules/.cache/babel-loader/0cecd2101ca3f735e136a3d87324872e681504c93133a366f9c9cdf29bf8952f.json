{"ast":null,"code":"/*!\n* chartjs-plugin-annotation v3.0.1\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2023 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, defined, isFunction, callback, isObject, valueOrDefault, toRadians, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(state, event) {\n      return filterElements(state, event, {\n        intersect: true\n      });\n    },\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(state, event, options) {\n      return getNearestItem(state, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(state, event, options) {\n      return filterElements(state, event, {\n        intersect: options.intersect,\n        axis: 'x'\n      });\n    },\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(state, event, options) {\n      return filterElements(state, event, {\n        intersect: options.intersect,\n        axis: 'y'\n      });\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {Object} state - the state of the plugin\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(state, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(state, event, options);\n}\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {\n      x: event.x,\n      y: center.y\n    };\n  } else if (axis === 'y') {\n    return {\n      x: center.x,\n      y: event.y\n    };\n  }\n  return center;\n}\nfunction filterElements(state, event, options) {\n  return state.visibleElements.filter(element => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\nfunction getNearestItem(state, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n  return filterElements(state, event, options).reduce((nearestItems, element) => {\n    const center = element.getCenterPoint();\n    const evenPoint = getPointByAxis(event, center, options.axis);\n    const distance = distanceBetweenPoints(event, evenPoint);\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n    return nearestItems;\n  }, []).sort((a, b) => a._index - b._index).slice(0, 1); // return only the top item;\n}\nconst isOlderPart = (act, req) => req > act || act.length > req.length && act.slice(0, req.length) === req;\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2;\n  return Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2) <= Math.pow(radius + hBorderWidth, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inBoxRange(point, _ref, axis, borderWidth) {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref;\n  const hBorderWidth = borderWidth / 2;\n  const inRangeX = point.x >= x - hBorderWidth - EPSILON && point.x <= x2 + hBorderWidth + EPSILON;\n  const inRangeY = point.y >= y - hBorderWidth - EPSILON && point.y <= y2 + hBorderWidth + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {\n    centerX,\n    centerY\n  } = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {\n    x: centerX,\n    y: centerY\n  };\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver) {\n  let strict = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nconst isPercentString = s => typeof s === 'string' && s.endsWith('%');\nconst toPercent = s => parseFloat(s) / 100;\nconst toPositivePercent = s => clamp(toPercent(s), 0, 1);\nconst boxAppering = (x, y) => ({\n  x,\n  y,\n  x2: x,\n  y2: y,\n  width: 0,\n  height: 0\n});\nconst defaultInitAnimation = {\n  box: properties => boxAppering(properties.centerX, properties.centerY),\n  ellipse: properties => ({\n    centerX: properties.centerX,\n    centerY: properties.centerX,\n    radius: 0,\n    width: 0,\n    height: 0\n  }),\n  label: properties => boxAppering(properties.centerX, properties.centerY),\n  line: properties => boxAppering(properties.x, properties.y),\n  point: properties => ({\n    centerX: properties.centerX,\n    centerY: properties.centerY,\n    radius: 0,\n    width: 0,\n    height: 0\n  }),\n  polygon: properties => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value) {\n  let positivePercent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {\n    x,\n    width\n  } = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {{x: number|string, y: number|string}|string|number} value\n * @param {string|number} defaultValue\n * @returns {{x: number|string, y: number|string}}\n */\nfunction toPosition(value) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue)\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{\n    chart,\n    properties,\n    options\n  }]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\nconst widthCache = new Map();\nconst notRadius = radius => isNaN(radius) || radius <= 0;\nconst fontsKey = fonts => fonts.reduce(function (prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]';\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, _ref2, rotation) {\n  let {\n    x,\n    y\n  } = _ref2;\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x,\n    y,\n    w: width,\n    h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {\n      x,\n      y\n    }, labels, fonts);\n  }\n  applyLabelContent(ctx, {\n    x,\n    y\n  }, labels, {\n    fonts,\n    colors\n  });\n  ctx.restore();\n}\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {\n    radius,\n    options\n  } = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {\n    x,\n    y,\n    radius,\n    rotation,\n    style,\n    rad\n  });\n}\nfunction drawPointStyle(ctx, _ref3) {\n  let {\n    x,\n    y,\n    radius,\n    rotation,\n    style,\n    rad\n  } = _ref3;\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n  switch (style) {\n    // Default includes circle\n    default:\n      ctx.arc(x, y, radius, 0, TAU);\n      ctx.closePath();\n      break;\n    case 'triangle':\n      ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n      // NOTE: the rounded rect implementation changed to use `arc` instead of\n      // `quadraticCurveTo` since it generates better results when rect is\n      // almost a circle. 0.516 (instead of 0.5) produces results with visually\n      // closer proportion to the previous impl and it is inscribed in the\n      // circle with `radius`. For more details, see the following PRs:\n      // https://github.com/chartjs/Chart.js/issues/5597\n      // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        ctx.rect(x - size, y - size, 2 * size, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n    case 'star':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      rad += QUARTER_PI;\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n    case 'line':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n      break;\n  }\n  ctx.fill();\n}\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {\n    width,\n    height\n  };\n}\nfunction applyLabelDecoration(ctx, _ref4, labels, fonts) {\n  let {\n    x,\n    y\n  } = _ref4;\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function (l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\nfunction applyLabelContent(ctx, _ref5, labels, _ref6) {\n  let {\n    x,\n    y\n  } = _ref5;\n  let {\n    fonts,\n    colors\n  } = _ref6;\n  let lhs = 0;\n  labels.forEach(function (l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\nconst limitedLineScale = {\n  xScaleID: {\n    min: 'xMin',\n    max: 'xMax',\n    start: 'left',\n    end: 'right',\n    startProp: 'x',\n    endProp: 'x2'\n  },\n  yScaleID: {\n    min: 'yMin',\n    max: 'yMax',\n    start: 'bottom',\n    end: 'top',\n    startProp: 'y',\n    endProp: 'y2'\n  }\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter(scale => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {\n    chartArea,\n    scales\n  } = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {\n    x,\n    y\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  if (!xScale && !yScale) {\n    return {};\n  }\n  let {\n    left: x,\n    right: x2\n  } = xScale || chart.chartArea;\n  let {\n    top: y,\n    bottom: y2\n  } = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {\n    min: options.xMin,\n    max: options.xMax,\n    start: x,\n    end: x2\n  });\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {\n    min: options.yMin,\n    max: options.yMax,\n    start: y2,\n    end: y\n  });\n  y = yDim.start;\n  y2 = yDim.end;\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {\n    scales,\n    chartArea\n  } = chart;\n  const scale = scales[options.scaleID];\n  const area = {\n    x: chartArea.left,\n    y: chartArea.top,\n    x2: chartArea.right,\n    y2: chartArea.bottom\n  };\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {\n        min,\n        max,\n        start,\n        end,\n        startProp,\n        endProp\n      } = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {\n        min: options[min],\n        max: options[max],\n        start: scale[start],\n        end: scale[end]\n      });\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\nfunction calculateX(_ref7, labelSize, position, padding) {\n  let {\n    properties,\n    options\n  } = _ref7;\n  const {\n    x: start,\n    x2: end,\n    width: size\n  } = properties;\n  return calculatePosition$1({\n    start,\n    end,\n    size,\n    borderWidth: options.borderWidth\n  }, {\n    position: position.x,\n    padding: {\n      start: padding.left,\n      end: padding.right\n    },\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\nfunction calculateY(_ref8, labelSize, position, padding) {\n  let {\n    properties,\n    options\n  } = _ref8;\n  const {\n    y: start,\n    y2: end,\n    height: size\n  } = properties;\n  return calculatePosition$1({\n    start,\n    end,\n    size,\n    borderWidth: options.borderWidth\n  }, {\n    position: position.y,\n    padding: {\n      start: padding.top,\n      end: padding.bottom\n    },\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {\n    start,\n    end,\n    borderWidth\n  } = boxOpts;\n  const {\n    position,\n    padding: {\n      start: padStart,\n      end: padEnd\n    },\n    adjust\n  } = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({\n    properties,\n    options\n  }, labelSize, position, padding);\n  const y = calculateY({\n    properties,\n    options\n  }, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n  state._getElements = getElements; // for testing\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        return handleMoveEvents(state, event, options);\n      case 'click':\n        return handleClickEvents(state, event, options);\n    }\n  }\n}\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n  let elements;\n  if (event.type === 'mousemove') {\n    elements = getElements(state, event, options.interaction);\n  } else {\n    elements = [];\n  }\n  const previous = state.hovered;\n  state.hovered = elements;\n  const context = {\n    state,\n    event\n  };\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\nfunction dispatchMoveEvents(_ref9, hook, elements, checkElements) {\n  let {\n    state,\n    event\n  } = _ref9;\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\nclass BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {\n      x,\n      y\n    } = rotated({\n      x: mouseX,\n      y: mouseY\n    }, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({\n      x,\n      y\n    }, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n  get label() {\n    return this.elements && this.elements[0];\n  }\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\nBoxAnnotation.id = 'boxAnnotation';\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\nconst positions = ['left', 'bottom', 'top', 'right'];\nclass LabelAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {\n      x,\n      y\n    } = rotated({\n      x: mouseX,\n      y: mouseY\n    }, this.getCenterPoint(useFinalPosition), toRadians(-this.rotation));\n    return inBoxRange({\n      x,\n      y\n    }, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {\n        centerX,\n        centerY\n      } = resolveBoxProperties(chart, options);\n      point = {\n        x: centerX,\n        y: centerY\n      };\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\nLabelAnnotation.id = 'labelAnnotation';\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%'\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position, 'center');\n  const x = calculatePosition(point.x, width, options.xAdjust, position.x);\n  const y = calculatePosition(point.y, height, options.yAdjust, position.y);\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\nfunction calculatePosition(start, size) {\n  let adjust = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let position = arguments.length > 3 ? arguments[3] : undefined;\n  return start - getRelativePosition(size, position) + adjust;\n}\nfunction drawCallout(ctx, element) {\n  const {\n    pointX,\n    pointY,\n    options\n  } = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {\n    separatorStart,\n    separatorEnd\n  } = getCalloutSeparatorCoord(element, calloutPosition);\n  const {\n    sideStart,\n    sideEnd\n  } = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({\n    x: pointX,\n    y: pointY\n  }, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\nfunction getCalloutSeparatorCoord(element, position) {\n  const {\n    x,\n    y,\n    x2,\n    y2\n  } = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {\n      x: x + adjust,\n      y\n    };\n    separatorEnd = {\n      x: separatorStart.x,\n      y: y2\n    };\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {\n      x,\n      y: y + adjust\n    };\n    separatorEnd = {\n      x: x2,\n      y: separatorStart.y\n    };\n  }\n  return {\n    separatorStart,\n    separatorEnd\n  };\n}\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {\n    width,\n    height,\n    options\n  } = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {\n    y,\n    width,\n    height,\n    options\n  } = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {\n      x: separatorStart.x,\n      y: y + getSize(height, start)\n    };\n    sideEnd = {\n      x: sideStart.x + side,\n      y: sideStart.y\n    };\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {\n      x: separatorStart.x + getSize(width, start),\n      y: separatorStart.y\n    };\n    sideEnd = {\n      x: sideStart.x,\n      y: sideStart.y + side\n    };\n  }\n  return {\n    sideStart,\n    sideEnd\n  };\n}\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\nfunction resolveCalloutAutoPosition(element, options) {\n  const {\n    x,\n    y,\n    x2,\n    y2,\n    width,\n    height,\n    pointX,\n    pointY,\n    centerX,\n    centerY,\n    rotation\n  } = element;\n  const center = {\n    x: centerX,\n    y: centerY\n  };\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({\n      x: xPoints[index],\n      y: yPoints[index]\n    }, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {\n        x: pointX,\n        y: pointY\n      })\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\nfunction getLabelSize(_ref10) {\n  let {\n    x,\n    y,\n    width,\n    height,\n    options\n  } = _ref10;\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\nfunction isPointInRange(element, callout, position) {\n  const {\n    pointX,\n    pointY\n  } = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\nconst pointInLine = (p1, p2, t) => ({\n  x: p1.x + t * (p2.x - p1.x),\n  y: p1.y + t * (p2.y - p1.y)\n});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, _ref11, axis) => {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref11;\n  return axis === 'y' ? {\n    start: Math.min(y, y2),\n    end: Math.max(y, y2),\n    value: mouseY\n  } : {\n    start: Math.min(x, x2),\n    end: Math.max(x, x2),\n    value: mouseX\n  };\n};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({\n  x: coordInCurve(start.x, cp.x, end.x, t),\n  y: coordInCurve(start.y, cp.y, end.y, t)\n});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\nclass LineAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hBorderWidth = this.options.borderWidth / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {\n        mouseX,\n        mouseY\n      };\n      const {\n        path,\n        ctx\n      } = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        const {\n          chart\n        } = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hBorderWidth);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {\n      mouseX,\n      mouseY\n    }, axis, {\n      hBorderWidth,\n      useFinalPosition\n    });\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      x,\n      y,\n      x2,\n      y2,\n      cp,\n      options\n    } = this;\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {\n      startOpts,\n      endOpts,\n      startAdjust,\n      endAdjust\n    } = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n  get label() {\n    return this.elements && this.elements[0];\n  }\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {\n      x,\n      y,\n      x2,\n      y2\n    } = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside ? limitLineToArea({\n      x,\n      y\n    }, {\n      x: x2,\n      y: y2\n    }, chart.chartArea) : {\n      x,\n      y,\n      x2,\n      y2,\n      width: Math.abs(x2 - x),\n      height: Math.abs(y2 - y)\n    };\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {\n        x: properties.x,\n        y: properties.y\n      };\n      const p2 = {\n        x: properties.x2,\n        y: properties.y2\n      };\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\nLineAnnotation.id = 'lineAnnotation';\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\nfunction inAxisRange(element, _ref12, axis, _ref13) {\n  let {\n    mouseX,\n    mouseY\n  } = _ref12;\n  let {\n    hBorderWidth,\n    useFinalPosition\n  } = _ref13;\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth || isOnLabel(element, {\n    mouseX,\n    mouseY\n  }, useFinalPosition, axis);\n}\nfunction isLineInArea(_ref14, _ref15) {\n  let {\n    x,\n    y,\n    x2,\n    y2\n  } = _ref14;\n  let {\n    top,\n    right,\n    bottom,\n    left\n  } = _ref15;\n  return !(x < left && x2 < left || x > right && x2 > right || y < top && y2 < top || y > bottom && y2 > bottom);\n}\nfunction limitPointToArea(_ref16, p2, _ref17) {\n  let {\n    x,\n    y\n  } = _ref16;\n  let {\n    top,\n    right,\n    bottom,\n    left\n  } = _ref17;\n  if (x < left) {\n    y = interpolateY(left, {\n      x,\n      y\n    }, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {\n      x,\n      y\n    }, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {\n      x,\n      y\n    }, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {\n      x,\n      y\n    }, p2);\n    y = bottom;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction limitLineToArea(p1, p2, area) {\n  const {\n    x,\n    y\n  } = limitPointToArea(p1, p2, area);\n  const {\n    x: x2,\n    y: y2\n  } = limitPointToArea(p2, p1, area);\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: Math.abs(x2 - x),\n    height: Math.abs(y2 - y)\n  };\n}\nfunction intersects(element, _ref18) {\n  let {\n    mouseX,\n    mouseY\n  } = _ref18;\n  let epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  let useFinalPosition = arguments.length > 3 ? arguments[3] : undefined;\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {\n    x: x1,\n    y: y1,\n    x2,\n    y2\n  } = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return sqr(mouseX - xx) + sqr(mouseY - yy) <= epsilon;\n}\nfunction isOnLabel(element, _ref19, useFinalPosition, axis) {\n  let {\n    mouseX,\n    mouseY\n  } = _ref19;\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {\n    width,\n    height,\n    padding\n  }, chart.chartArea);\n}\nfunction calculateAutoRotation(properties) {\n  const {\n    x,\n    y,\n    x2,\n    y2\n  } = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {\n    width,\n    height,\n    padding\n  } = sizes;\n  const {\n    xAdjust,\n    yAdjust\n  } = label;\n  const p1 = {\n    x: properties.x,\n    y: properties.y\n  };\n  const p2 = {\n    x: properties.x2,\n    y: properties.y2\n  };\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {\n    labelSize: size,\n    padding\n  }, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {\n    size: size.w,\n    min: chartArea.left,\n    max: chartArea.right,\n    padding: padding.left\n  };\n  const yCoordinateSizes = {\n    size: size.h,\n    min: chartArea.top,\n    max: chartArea.bottom,\n    padding: padding.top\n  };\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - width / 2,\n    y: centerY - height / 2,\n    x2: centerX + width / 2,\n    y2: centerY + height / 2,\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({\n      w: properties.x2 - properties.x,\n      h: properties.y2 - properties.y\n    }, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({\n      w: properties.x - properties.x2,\n      h: properties.y - properties.y2\n    }, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {\n    labelSize,\n    padding\n  } = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = lineW > 0 && (labelSize.w / 2 + padding.left - space.x) / lineW;\n  const y = lineH > 0 && (labelSize.h / 2 + padding.top - space.y) / lineH;\n  return clamp(Math.max(x, y), 0, 0.25);\n}\nfunction spaceAround(properties, chartArea) {\n  const {\n    x,\n    x2,\n    y,\n    y2\n  } = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {\n    size,\n    min,\n    max,\n    padding\n  } = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= coordinate - padding - halfSize) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= coordinate + padding + halfSize) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {\n    length,\n    width\n  } = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {\n    x: length,\n    y: width + adjust\n  };\n  const p2 = {\n    x: 0,\n    y: adjust\n  };\n  return Math.abs(interpolateX(0, p1, p2));\n}\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {\n    length,\n    width,\n    fill,\n    backgroundColor,\n    borderColor\n  } = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\nfunction getControlPoint(properties, options, distance) {\n  const {\n    x,\n    y,\n    x2,\n    y2,\n    centerX,\n    centerY\n  } = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {\n    x: centerX,\n    y: centerY\n  }, angle);\n}\nfunction drawArrowHeadOnCurve(ctx, _ref20, _ref21, arrowOpts) {\n  let {\n    x,\n    y\n  } = _ref20;\n  let {\n    angle,\n    adjust\n  } = _ref21;\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\nfunction drawCurve(ctx, element, cp, length) {\n  const {\n    x,\n    y,\n    x2,\n    y2,\n    options\n  } = element;\n  const {\n    startOpts,\n    endOpts,\n    startAdjust,\n    endAdjust\n  } = getArrowHeads(element);\n  const p1 = {\n    x,\n    y\n  };\n  const p2 = {\n    x: x2,\n    y: y2\n  };\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {\n    angle: startAngle,\n    adjust: startAdjust\n  }, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {\n    angle: endAngle,\n    adjust: endAdjust\n  }, endOpts);\n}\nclass EllipseAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({\n        x: mouseX,\n        y: mouseY\n      }, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, borderWidth);\n    }\n    const {\n      x,\n      y,\n      x2,\n      y2\n    } = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {\n      start: y,\n      end: y2\n    } : {\n      start: x,\n      end: x2\n    };\n    const rotatedPoint = rotated({\n      x: mouseX,\n      y: mouseY\n    }, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hBorderWidth - EPSILON && rotatedPoint[axis] <= limit.end + hBorderWidth + EPSILON;\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      width,\n      height,\n      centerX,\n      centerY,\n      options\n    } = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n  get label() {\n    return this.elements && this.elements[0];\n  }\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\nEllipseAnnotation.id = 'ellipseAnnotation';\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {\n    width,\n    height,\n    centerX,\n    centerY\n  } = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return a / Math.pow(xRadius + hBorderWidth, 2) + b / Math.pow(yRadius + hBorderWidth, 2) <= 1.0001;\n}\nclass PointAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {\n      x,\n      y,\n      x2,\n      y2,\n      width\n    } = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({\n        x: mouseX,\n        y: mouseY\n      }, this.getCenterPoint(useFinalPosition), width / 2, borderWidth);\n    }\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {\n      start: y,\n      end: y2,\n      value: mouseY\n    } : {\n      start: x,\n      end: x2,\n      value: mouseX\n    };\n    return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth;\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\nPointAnnotation.id = 'pointAnnotation';\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nclass PolygonAnnotation extends Element {\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({\n      x: mouseX,\n      y: mouseY\n    }, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map(point => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      elements,\n      options\n    } = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {\n      sides,\n      rotation\n    } = options;\n    const elements = [];\n    const angle = 2 * PI / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\nPolygonAnnotation.id = 'polygonAnnotation';\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nfunction buildPointElement(_ref22, _ref23, rad) {\n  let {\n    centerX,\n    centerY\n  } = _ref22;\n  let {\n    radius,\n    borderWidth\n  } = _ref23;\n  const halfBorder = borderWidth / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {\n    x: centerX + sin * radius,\n    y: centerY - cos * radius\n  };\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + halfBorder),\n      bY: centerY - cos * (radius + halfBorder)\n    }\n  };\n}\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if (B.bY > y !== A.bY > y && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\nconst directUpdater = {\n  update: Object.assign\n};\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = prop => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'line';\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n    properties.skip = toSkip(properties);\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n    animations.update(element, properties);\n  }\n}\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elementClass.defaults), resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map(item => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\nvar version = \"3.0.1\";\nconst chartStates = new Map();\nconst hooks = eventHooks.concat(elementHooks);\nvar annotation = {\n  id: 'annotation',\n  version,\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      }\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {}\n    }\n  },\n  descriptors: {\n    _indexable: false,\n    _scriptable: prop => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n  additionalOptionScopes: ['']\n};\nfunction draw(chart, caller, clip) {\n  const {\n    ctx,\n    chartArea\n  } = chart;\n  const state = chartStates.get(chart);\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({\n        element: el,\n        main: true\n      });\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({\n            element: sub\n          });\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\nexport { annotation as default };","map":{"version":3,"names":["Element","defaults","Animations","Chart","distanceBetweenPoints","defined","isFunction","callback","isObject","valueOrDefault","toRadians","isArray","toFont","addRoundedRectPath","toTRBLCorners","QUARTER_PI","PI","HALF_PI","TWO_THIRDS_PI","TAU","isNumber","RAD_PER_DEG","toPadding","isFinite","toDegrees","clipArea","unclipArea","interaction","modes","point","state","event","filterElements","intersect","nearest","options","getNearestItem","x","axis","y","getElements","mode","inRangeByAxis","element","inRange","getPointByAxis","center","visibleElements","filter","minDistance","Number","POSITIVE_INFINITY","reduce","nearestItems","getCenterPoint","evenPoint","distance","push","sort","a","b","_index","slice","isOlderPart","act","req","length","EPSILON","clamp","from","to","Math","min","max","clampAll","obj","key","Object","keys","inPointRange","radius","borderWidth","hBorderWidth","pow","inBoxRange","_ref","x2","y2","inRangeX","inRangeY","getElementCenterPoint","useFinalPosition","centerX","centerY","getProps","requireVersion","pkg","ver","strict","arguments","undefined","parts","split","i","parseInt","Error","isPercentString","s","endsWith","toPercent","parseFloat","toPositivePercent","boxAppering","width","height","defaultInitAnimation","box","properties","ellipse","label","line","polygon","getRelativePosition","size","position","getSize","value","positivePercent","calculateTextAlignment","textAlign","toPosition","defaultValue","isBoundToPoint","xValue","yValue","initAnimationProperties","chart","initAnim","init","applyDefault","execCallback","loadHooks","hooks","hooksContainer","activated","forEach","hook","type","result","widthCache","Map","notRadius","isNaN","fontsKey","fonts","prev","item","string","isImageOrCanvas","content","toString","translate","ctx","_ref2","rotation","rotate","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","optFont","font","map","f","strokeWidth","textStrokeWidth","lines","mapKey","join","_measureText","has","set","calculateLabelSize","get","drawBox","rect","save","stroke","fillStyle","backgroundColor","beginPath","w","h","borderRadius","closePath","fill","borderShadowColor","restore","drawLabel","globalAlpha","getOpacity","opacity","style","drawImage","labels","optColor","color","colors","textBaseline","setTextStrokeStyle","applyLabelDecoration","applyLabelContent","miterLimit","textStrokeColor","drawPoint","pointStyle","rad","drawPointStyle","_ref3","xOffset","yOffset","cornerRadius","arc","moveTo","sin","cos","lineTo","SQRT1_2","count","text","measureText","lineHeight","_ref4","lhs","l","lh","strokeText","_ref5","_ref6","c","fillText","elementValue","limitedLineScale","xScaleID","start","end","startProp","endProp","yScaleID","scaleValue","scale","fallback","parse","getPixelForValue","retrieveScaleID","scales","scaleID","charAt","axes","values","id","getDimensionByScale","reverse","getChartPoint","chartArea","xScale","yScale","left","top","resolveBoxProperties","right","bottom","xDim","getChartDimensionByScale","xMin","xMax","yDim","yMin","yMax","resolvePointProperties","adjustCenterX","xAdjust","adjustCenterY","yAdjust","getChartCircle","resolveLineProperties","area","resolveFullLineProperties","resolveLimitedLineProperties","resolveBoxAndLabelProperties","initProperties","elements","optionScope","resolveLabelElementProperties$1","NaN","endValue","isHorizontal","scaleId","dim","calculateX","_ref7","labelSize","padding","calculatePosition$1","adjust","calculateY","_ref8","boxOpts","labelOpts","padStart","padEnd","availableSize","callout","display","rotated","angle","cx","cy","moveHooks","eventHooks","concat","updateListeners","listened","listeners","moveListened","_getElements","annotations","scope","click","handleEvent","handleMoveEvents","handleClickEvents","previous","hovered","context","changed","dispatchMoveEvents","_ref9","checkElements","indexOf","dispatchEvent","handler","$context","elementHooks","updateHooks","hooked","invokeHook","callbackHook","adjustScaleRange","range","getScaleLimits","changeScaleLimit","handleTickRangeOptions","verifyScaleOptions","annotation","verifyScaleIDs","limit","suggestedLimit","scaleLimitDefined","scaleOptions","verifyProperties","console","warn","prop","scaleIDOption","limits","NEGATIVE_INFINITY","updateLimits","props","raw","BoxAnnotation","mouseX","mouseY","draw","resolveElementProperties","drawTime","family","weight","z","defaultRoutes","descriptors","_fallback","positions","LabelAnnotation","visible","_visible","drawCallout","getLabelSize","boxSize","measureRect","pointX","pointY","margin","side","calculatePosition","calloutPosition","resolveCalloutPosition","isPointInRange","separatorStart","separatorEnd","getCalloutSeparatorCoord","sideStart","sideEnd","getCalloutSideCoord","rotatedPoint","getCalloutSeparatorAdjust","getCalloutSideAdjust","includes","resolveCalloutAutoPosition","xPoints","yPoints","index","_ref10","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","rangeLimit","_ref11","coordInCurve","cp","pointInCurve","coordAngleInCurve","angleInCurve","atan2","LineAnnotation","path","mx","currentDevicePixelRatio","my","isPointInStroke","isOnLabel","epsilon","intersects","inAxisRange","sqrt","curve","drawCurve","startOpts","endOpts","startAdjust","endAdjust","getArrowHeads","drawArrowHead","inside","isLineInArea","limitLineToArea","getControlPoint","labelProperties","resolveLabelElementProperties","arrowHeadsDefaults","arrowHeads","assign","controlPoint","_ref12","_ref13","_ref14","_ref15","limitPointToArea","_ref16","_ref17","_ref18","x1","y1","dx","dy","lenSq","xx","yy","_ref19","textSize","calculateLabelPosition","calculateAutoRotation","sizes","rotatedSize","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","space","spaceAround","calculateTAdjust","lineSize","lineW","lineH","r","coordinate","labelSizes","halfSize","arrowStartOpts","arrowEndOpts","getLineAdjust","arrowOpts","offset","arrowOffsetX","drawArrowHeadOnCurve","_ref20","_ref21","startAngle","endAngle","ps","pe","Path2D","quadraticCurveTo","EllipseAnnotation","pointInEllipse","p","xRadius","yRadius","cosAngle","sinAngle","PointAnnotation","PolygonAnnotation","pointIsInPolygon","axisPoints","bY","bX","first","el","sides","elProps","buildPointElement","_ref22","_ref23","halfBorder","points","isInside","A","B","annotationTypes","describe","directUpdater","update","hooks$1","resolve","optDefs","resolveObj","isIndexable","resolveType","updateElements","animations","resolveAnimations","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","animOpts","mainElement","subElements","definition","subElement","subResolver","override","elementClass","defs","create","add","splice","Array","version","chartStates","beforeRegister","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","afterDataLimits","afterUpdate","beforeDatasetsDraw","_args","clip","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","afterDestroy","delete","_getState","numbers","common","_indexable","_scriptable","_allKeys","opts","additionalOptionScopes","caller","drawableElements","getDrawableElements","drawElement","main","sub","default"],"sources":["/Users/stephen/Desktop/student-wellness-tracker/frontend/node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["/*!\n* chartjs-plugin-annotation v3.0.1\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2023 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { distanceBetweenPoints, defined, isFunction, callback, isObject, valueOrDefault, toRadians, isArray, toFont, addRoundedRectPath, toTRBLCorners, QUARTER_PI, PI, HALF_PI, TWO_THIRDS_PI, TAU, isNumber, RAD_PER_DEG, toPadding, isFinite, toDegrees, clipArea, unclipArea } from 'chart.js/helpers';\n\n/**\n * @typedef { import(\"chart.js\").ChartEvent } ChartEvent\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst interaction = {\n  modes: {\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    point(state, event) {\n      return filterElements(state, event, {intersect: true});\n    },\n\n    /**\n     * Nearest mode returns the element closest to the event position\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found (only 1 element)\n     */\n    nearest(state, event, options) {\n      return getNearestItem(state, event, options);\n    },\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    x(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'x'});\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @param {Object} state - the state of the plugin\n     * @param {ChartEvent} event - the event we are find things at\n     * @param {Object} options - interaction options to use\n     * @return {AnnotationElement[]} - elements that are found\n     */\n    y(state, event, options) {\n      return filterElements(state, event, {intersect: options.intersect, axis: 'y'});\n    }\n  }\n};\n\n/**\n * Returns all elements that hit test based on the event position\n * @param {Object} state - the state of the plugin\n * @param {ChartEvent} event - the event we are find things at\n * @param {Object} options - interaction options to use\n * @return {AnnotationElement[]} - elements that are found\n */\nfunction getElements(state, event, options) {\n  const mode = interaction.modes[options.mode] || interaction.modes.nearest;\n  return mode(state, event, options);\n}\n\nfunction inRangeByAxis(element, event, axis) {\n  if (axis !== 'x' && axis !== 'y') {\n    return element.inRange(event.x, event.y, 'x', true) || element.inRange(event.x, event.y, 'y', true);\n  }\n  return element.inRange(event.x, event.y, axis, true);\n}\n\nfunction getPointByAxis(event, center, axis) {\n  if (axis === 'x') {\n    return {x: event.x, y: center.y};\n  } else if (axis === 'y') {\n    return {x: center.x, y: event.y};\n  }\n  return center;\n}\n\nfunction filterElements(state, event, options) {\n  return state.visibleElements.filter((element) => options.intersect ? element.inRange(event.x, event.y) : inRangeByAxis(element, event, options.axis));\n}\n\nfunction getNearestItem(state, event, options) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return filterElements(state, event, options)\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const evenPoint = getPointByAxis(event, center, options.axis);\n      const distance = distanceBetweenPoints(event, evenPoint);\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1); // return only the top item;\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.slice(0, req.length) === req);\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('chart.js').InteractionAxis } InteractionAxis\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst EPSILON = 0.001;\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\n/**\n * @param {Object} obj\n * @param {number} from\n * @param {number} to\n * @returns {Object}\n */\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\n/**\n * @param {Point} point\n * @param {Point} center\n * @param {number} radius\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2;\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hBorderWidth, 2);\n}\n\n/**\n * @param {Point} point\n * @param {{x: number, y: number, x2: number, y2: number}} rect\n * @param {InteractionAxis} axis\n * @param {number} borderWidth\n * @returns {boolean}\n */\nfunction inBoxRange(point, {x, y, x2, y2}, axis, borderWidth) {\n  const hBorderWidth = borderWidth / 2;\n  const inRangeX = point.x >= x - hBorderWidth - EPSILON && point.x <= x2 + hBorderWidth + EPSILON;\n  const inRangeY = point.y >= y - hBorderWidth - EPSILON && point.y <= y2 + hBorderWidth + EPSILON;\n  if (axis === 'x') {\n    return inRangeX;\n  } else if (axis === 'y') {\n    return inRangeY;\n  }\n  return inRangeX && inRangeY;\n}\n\n/**\n * @param {AnnotationElement} element\n * @param {boolean} useFinalPosition\n * @returns {Point}\n */\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {centerX, centerY} = element.getProps(['centerX', 'centerY'], useFinalPosition);\n  return {x: centerX, y: centerY};\n}\n\n/**\n * @param {string} pkg\n * @param {string} min\n * @param {string} ver\n * @param {boolean} [strict=true]\n * @returns {boolean}\n */\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => parseFloat(s) / 100;\nconst toPositivePercent = (s) => clamp(toPercent(s), 0, 1);\n\nconst boxAppering = (x, y) => ({x, y, x2: x, y2: y, width: 0, height: 0});\nconst defaultInitAnimation = {\n  box: (properties) => boxAppering(properties.centerX, properties.centerY),\n  ellipse: (properties) => ({centerX: properties.centerX, centerY: properties.centerX, radius: 0, width: 0, height: 0}),\n  label: (properties) => boxAppering(properties.centerX, properties.centerY),\n  line: (properties) => boxAppering(properties.x, properties.y),\n  point: (properties) => ({centerX: properties.centerX, centerY: properties.centerY, radius: 0, width: 0, height: 0}),\n  polygon: (properties) => boxAppering(properties.centerX, properties.centerY)\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n * @typedef { import('../../types/options').AnnotationPointCoordinates } AnnotationPointCoordinates\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/label').LabelPositionObject } LabelPositionObject\n */\n\n/**\n * @param {number} size\n * @param {number|string} position\n * @returns {number}\n */\nfunction getRelativePosition(size, position) {\n  if (position === 'start') {\n    return 0;\n  }\n  if (position === 'end') {\n    return size;\n  }\n  if (isPercentString(position)) {\n    return toPositivePercent(position) * size;\n  }\n  return size / 2;\n}\n\n/**\n * @param {number} size\n * @param {number|string} value\n * @param {boolean} [positivePercent=true]\n * @returns {number}\n */\nfunction getSize(size, value, positivePercent = true) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return (positivePercent ? toPositivePercent(value) : toPercent(value)) * size;\n  }\n  return size;\n}\n\n/**\n * @param {{x: number, width: number}} size\n * @param {CoreLabelOptions} options\n * @returns {number}\n */\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\n/**\n * @param {{x: number|string, y: number|string}|string|number} value\n * @param {string|number} defaultValue\n * @returns {{x: number|string, y: number|string}}\n */\nfunction toPosition(value, defaultValue = 'center') {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, defaultValue),\n      y: valueOrDefault(value.y, defaultValue),\n    };\n  }\n  value = valueOrDefault(value, defaultValue);\n  return {\n    x: value,\n    y: value\n  };\n}\n\n/**\n * @param {AnnotationPointCoordinates} options\n * @returns {boolean}\n */\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\n/**\n * @param {Chart} chart\n * @param {AnnotationBoxModel} properties\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationElement}\n */\nfunction initAnimationProperties(chart, properties, options) {\n  const initAnim = options.init;\n  if (!initAnim) {\n    return;\n  } else if (initAnim === true) {\n    return applyDefault(properties, options);\n  }\n  return execCallback(chart, properties, options);\n}\n\n/**\n * @param {Object} options\n * @param {Array} hooks\n * @param {Object} hooksContainer\n * @returns {boolean}\n */\nfunction loadHooks(options, hooks, hooksContainer) {\n  let activated = false;\n  hooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      activated = true;\n      hooksContainer[hook] = options[hook];\n    } else if (defined(hooksContainer[hook])) {\n      delete hooksContainer[hook];\n    }\n  });\n  return activated;\n}\n\nfunction applyDefault(properties, options) {\n  const type = options.type || 'line';\n  return defaultInitAnimation[type](properties);\n}\n\nfunction execCallback(chart, properties, options) {\n  const result = callback(options.init, [{chart, properties, options}]);\n  if (result === true) {\n    return applyDefault(properties, options);\n  } else if (isObject(result)) {\n    return result;\n  }\n}\n\nconst widthCache = new Map();\nconst notRadius = (radius) => isNaN(radius) || radius <= 0;\nconst fontsKey = (fonts) => fonts.reduce(function(prev, item) {\n  prev += item.string;\n  return prev;\n}, '');\n\n/**\n * @typedef { import('chart.js').Point } Point\n * @typedef { import('../../types/label').CoreLabelOptions } CoreLabelOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Point} point - the point of translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, {x, y}, rotation) {\n  if (rotation) {\n    ctx.translate(x, y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-x, -y);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n * @returns {boolean|undefined}\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} options\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {CoreLabelOptions} options\n * @returns {{width: number, height: number}}\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + fontsKey(fonts) + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    widthCache.set(mapKey, calculateLabelSize(ctx, lines, fonts, strokeWidth));\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {Object} options\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    radius: clampAll(toTRBLCorners(options.borderRadius), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @param {CoreLabelOptions} options\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.save();\n    ctx.globalAlpha = getOpacity(options.opacity, content.style.opacity);\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    ctx.restore();\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const optFont = options.font;\n  const fonts = isArray(optFont) ? optFont.map(f => toFont(f)) : [toFont(optFont)];\n  const optColor = options.color;\n  const colors = isArray(optColor) ? optColor : [optColor];\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    applyLabelDecoration(ctx, {x, y}, labels, fonts);\n  }\n  applyLabelContent(ctx, {x, y}, labels, {fonts, colors});\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {{radius: number, options: PointAnnotationOptions}} element\n * @param {number} x\n * @param {number} y\n */\nfunction drawPoint(ctx, element, x, y) {\n  const {radius, options} = element;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (isImageOrCanvas(style)) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rad);\n    ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n    ctx.restore();\n    return;\n  }\n  if (notRadius(radius)) {\n    return;\n  }\n  drawPointStyle(ctx, {x, y, radius, rotation, style, rad});\n}\n\nfunction drawPointStyle(ctx, {x, y, radius, rotation, style, rad}) {\n  let xOffset, yOffset, size, cornerRadius;\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n}\n\nfunction calculateLabelSize(ctx, lines, fonts, strokeWidth) {\n  ctx.save();\n  const count = lines.length;\n  let width = 0;\n  let height = strokeWidth;\n  for (let i = 0; i < count; i++) {\n    const font = fonts[Math.min(i, fonts.length - 1)];\n    ctx.font = font.string;\n    const text = lines[i];\n    width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    height += font.lineHeight;\n  }\n  ctx.restore();\n  return {width, height};\n}\n\nfunction applyLabelDecoration(ctx, {x, y}, labels, fonts) {\n  ctx.beginPath();\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.font = f.string;\n    ctx.strokeText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n  });\n  ctx.stroke();\n}\n\nfunction applyLabelContent(ctx, {x, y}, labels, {fonts, colors}) {\n  let lhs = 0;\n  labels.forEach(function(l, i) {\n    const c = colors[Math.min(i, colors.length - 1)];\n    const f = fonts[Math.min(i, fonts.length - 1)];\n    const lh = f.lineHeight;\n    ctx.beginPath();\n    ctx.font = f.string;\n    ctx.fillStyle = c;\n    ctx.fillText(l, x, y + lh / 2 + lhs);\n    lhs += lh;\n    ctx.fill();\n  });\n}\n\nfunction getOpacity(value, elementValue) {\n  const opacity = isNumber(value) ? value : elementValue;\n  return isNumber(opacity) ? clamp(opacity, 0, 1) : 1;\n}\n\nconst limitedLineScale = {\n  xScaleID: {min: 'xMin', max: 'xMax', start: 'left', end: 'right', startProp: 'x', endProp: 'x2'},\n  yScaleID: {min: 'yMin', max: 'yMax', start: 'bottom', end: 'top', startProp: 'y', endProp: 'y2'}\n};\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/element').AnnotationBoxModel } AnnotationBoxModel\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').LineAnnotationOptions } LineAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n * @typedef { import('../../types/options').PolygonAnnotationOptions } PolygonAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Search the scale defined in chartjs by the axis related to the annotation options key.\n * @param {{ [key: string]: Scale }} scales\n * @param {CoreAnnotationOptions} options\n * @param {string} key\n * @returns {string}\n */\nfunction retrieveScaleID(scales, options, key) {\n  const scaleID = options[key];\n  if (scaleID || key === 'scaleID') {\n    return scaleID;\n  }\n  const axis = key.charAt(0);\n  const axes = Object.values(scales).filter((scale) => scale.axis && scale.axis === axis);\n  if (axes.length) {\n    return axes[0].id;\n  }\n  return axis;\n}\n\n/**\n * @param {Scale} scale\n * @param {{min: number, max: number, start: number, end: number}} options\n * @returns {{start: number, end: number}|undefined}\n */\nfunction getDimensionByScale(scale, options) {\n  if (scale) {\n    const reverse = scale.options.reverse;\n    const start = scaleValue(scale, options.min, reverse ? options.end : options.start);\n    const end = scaleValue(scale, options.max, reverse ? options.start : options.end);\n    return {\n      start,\n      end\n    };\n  }\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, xScale.left + xScale.width / 2);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, yScale.top + yScale.height / 2);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxProperties(chart, options) {\n  const scales = chart.scales;\n  const xScale = scales[retrieveScaleID(scales, options, 'xScaleID')];\n  const yScale = scales[retrieveScaleID(scales, options, 'yScaleID')];\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  let {left: x, right: x2} = xScale || chart.chartArea;\n  let {top: y, bottom: y2} = yScale || chart.chartArea;\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y2, end: y});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y,\n    centerX: x + (x2 - x) / 2,\n    centerY: y + (y2 - y) / 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions|PolygonAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolvePointProperties(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = resolveBoxProperties(chart, options);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    const size = radius * 2;\n    const adjustCenterX = box.centerX + options.xAdjust;\n    const adjustCenterY = box.centerY + options.yAdjust;\n    return {\n      x: adjustCenterX - radius,\n      y: adjustCenterY - radius,\n      x2: adjustCenterX + radius,\n      y2: adjustCenterY + radius,\n      centerX: adjustCenterX,\n      centerY: adjustCenterY,\n      width: size,\n      height: size,\n      radius\n    };\n  }\n  return getChartCircle(chart, options);\n}\n/**\n * @param {Chart} chart\n * @param {LineAnnotationOptions} options\n * @returns {AnnotationBoxModel}\n */\nfunction resolveLineProperties(chart, options) {\n  const {scales, chartArea} = chart;\n  const scale = scales[options.scaleID];\n  const area = {x: chartArea.left, y: chartArea.top, x2: chartArea.right, y2: chartArea.bottom};\n\n  if (scale) {\n    resolveFullLineProperties(scale, area, options);\n  } else {\n    resolveLimitedLineProperties(scales, area, options);\n  }\n  return area;\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @param {boolean} [centerBased=false]\n * @returns {AnnotationBoxModel}\n */\nfunction resolveBoxAndLabelProperties(chart, options) {\n  const properties = resolveBoxProperties(chart, options);\n  properties.initProperties = initAnimationProperties(chart, properties, options);\n  properties.elements = [{\n    type: 'label',\n    optionScope: 'label',\n    properties: resolveLabelElementProperties$1(chart, properties, options),\n    initProperties: properties.initProperties\n  }];\n  return properties;\n}\n\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  const size = options.radius * 2;\n  return {\n    x: point.x - options.radius + options.xAdjust,\n    y: point.y - options.radius + options.yAdjust,\n    x2: point.x + options.radius + options.xAdjust,\n    y2: point.y + options.radius + options.yAdjust,\n    centerX: point.x + options.xAdjust,\n    centerY: point.y + options.yAdjust,\n    radius: options.radius,\n    width: size,\n    height: size\n  };\n}\n\nfunction getChartDimensionByScale(scale, options) {\n  const result = getDimensionByScale(scale, options) || options;\n  return {\n    start: Math.min(result.start, result.end),\n    end: Math.max(result.start, result.end)\n  };\n}\n\nfunction resolveFullLineProperties(scale, area, options) {\n  const min = scaleValue(scale, options.value, NaN);\n  const max = scaleValue(scale, options.endValue, min);\n  if (scale.isHorizontal()) {\n    area.x = min;\n    area.x2 = max;\n  } else {\n    area.y = min;\n    area.y2 = max;\n  }\n}\n\nfunction resolveLimitedLineProperties(scales, area, options) {\n  for (const scaleId of Object.keys(limitedLineScale)) {\n    const scale = scales[retrieveScaleID(scales, options, scaleId)];\n    if (scale) {\n      const {min, max, start, end, startProp, endProp} = limitedLineScale[scaleId];\n      const dim = getDimensionByScale(scale, {min: options[min], max: options[max], start: scale[start], end: scale[end]});\n      area[startProp] = dim.start;\n      area[endProp] = dim.end;\n    }\n  }\n}\n\nfunction calculateX({properties, options}, labelSize, position, padding) {\n  const {x: start, x2: end, width: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust: options.label.xAdjust,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY({properties, options}, labelSize, position, padding) {\n  const {y: start, y2: end, height: size} = properties;\n  return calculatePosition$1({start, end, size, borderWidth: options.borderWidth}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust: options.label.yAdjust,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {start, end, borderWidth} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + getRelativePosition(availableSize, position);\n}\n\nfunction resolveLabelElementProperties$1(chart, properties, options) {\n  const label = options.label;\n  label.backgroundColor = 'transparent';\n  label.callout.display = false;\n  const position = toPosition(label.position);\n  const padding = toPadding(label.padding);\n  const labelSize = measureLabelSize(chart.ctx, label);\n  const x = calculateX({properties, options}, labelSize, position, padding);\n  const y = calculateY({properties, options}, labelSize, position, padding);\n  const width = labelSize.width + padding.width;\n  const height = labelSize.height + padding.height;\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2,\n    rotation: label.rotation\n  };\n\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nconst moveHooks = ['enter', 'leave'];\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\nconst eventHooks = moveHooks.concat('click');\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateListeners(chart, state, options) {\n  state.listened = loadHooks(options, eventHooks, state.listeners);\n  state.moveListened = false;\n  state._getElements = getElements; // for testing\n\n  moveHooks.forEach(hook => {\n    if (isFunction(options[hook])) {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened && isFunction(scope.click)) {\n        state.listened = true;\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (isFunction(scope[hook])) {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {ChartEvent} event\n * @param {AnnotationPluginOptions} options\n * @return {boolean|undefined}\n */\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      return handleMoveEvents(state, event, options);\n    case 'click':\n      return handleClickEvents(state, event, options);\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event, options) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let elements;\n\n  if (event.type === 'mousemove') {\n    elements = getElements(state, event, options.interaction);\n  } else {\n    elements = [];\n  }\n\n  const previous = state.hovered;\n  state.hovered = elements;\n\n  const context = {state, event};\n  let changed = dispatchMoveEvents(context, 'leave', previous, elements);\n  return dispatchMoveEvents(context, 'enter', elements, previous) || changed;\n}\n\nfunction dispatchMoveEvents({state, event}, hook, elements, checkElements) {\n  let changed;\n  for (const element of elements) {\n    if (checkElements.indexOf(element) < 0) {\n      changed = dispatchEvent(element.options[hook] || state.listeners[hook], element, event) || changed;\n    }\n  }\n  return changed;\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const elements = getElements(state, event, options.interaction);\n  let changed;\n  for (const element of elements) {\n    changed = dispatchEvent(element.options.click || listeners.click, element, event) || changed;\n  }\n  return changed;\n}\n\nfunction dispatchEvent(handler, element, event) {\n  return callback(handler, [element.$context, event]) === true;\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n * @typedef { import('../../types/element').AnnotationElement } AnnotationElement\n */\n\nconst elementHooks = ['afterDraw', 'beforeDraw'];\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n */\nfunction updateHooks(chart, state, options) {\n  const visibleElements = state.visibleElements;\n  state.hooked = loadHooks(options, elementHooks, state.hooks);\n\n  if (!state.hooked) {\n    visibleElements.forEach(scope => {\n      if (!state.hooked) {\n        elementHooks.forEach(hook => {\n          if (isFunction(scope.options[hook])) {\n            state.hooked = true;\n          }\n        });\n      }\n    });\n  }\n}\n\n/**\n * @param {Object} state\n * @param {AnnotationElement} element\n * @param {string} hook\n */\nfunction invokeHook(state, element, hook) {\n  if (state.hooked) {\n    const callbackHook = element.options[hook] || state.hooks[hook];\n    return callback(callbackHook, [element.$context]);\n  }\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n */\n\n/**\n * @param {Chart} chart\n * @param {Scale} scale\n * @param {CoreAnnotationOptions[]} annotations\n */\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(chart.scales, scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && isFunction(scale.handleTickRangeOptions)) {\n    scale.handleTickRangeOptions();\n  }\n}\n\n/**\n * @param {CoreAnnotationOptions[]} annotations\n * @param {{ [key: string]: Scale }} scales\n */\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    const scaleID = retrieveScaleID(scales, annotation, key);\n    if (scaleID && !scales[scaleID] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${scaleID}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scales, scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (retrieveScaleID(scales, annotation, scaleIDOption) === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nclass BoxAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n    callout: {\n      display: false\n    },\n    color: 'black',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.rotation));\n    return inBoxRange({x, y}, this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const visible = !defined(this._visible) || this._visible;\n    if (!options.display || !options.content || !visible) {\n      return;\n    }\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), this.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, getLabelSize(this), options);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    let point;\n    if (!isBoundToPoint(options)) {\n      const {centerX, centerY} = resolveBoxProperties(chart, options);\n      point = {x: centerX, y: centerY};\n    } else {\n      point = getChartPoint(chart, options);\n    }\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    return {\n      initProperties: initAnimationProperties(chart, boxSize, options),\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      rotation: options.rotation\n    };\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    display: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  init: undefined,\n  opacity: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position, 'center');\n  const x = calculatePosition(point.x, width, options.xAdjust, position.x);\n  const y = calculatePosition(point.y, height, options.yAdjust, position.y);\n\n  return {\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n    width,\n    height,\n    centerX: x + width / 2,\n    centerY: y + height / 2\n  };\n}\n\nfunction calculatePosition(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, options} = element;\n  const callout = options.callout;\n  const calloutPosition = callout && callout.display && resolveCalloutPosition(element, callout);\n  if (!calloutPosition || isPointInRange(element, callout, calloutPosition)) {\n    return;\n  }\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-element.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, x2, y2} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: y2};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: x2, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(element, options) {\n  const position = options.position;\n  if (positions.includes(position)) {\n    return position;\n  }\n  return resolveCalloutAutoPosition(element, options);\n}\n\nfunction resolveCalloutAutoPosition(element, options) {\n  const {x, y, x2, y2, width, height, pointX, pointY, centerX, centerY, rotation} = element;\n  const center = {x: centerX, y: centerY};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x2];\n  const yPoints = [y + yAdjust, y2, y, y2];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nfunction getLabelSize({x, y, width, height, options}) {\n  const hBorderWidth = options.borderWidth / 2;\n  const padding = toPadding(options.padding);\n  return {\n    x: x + padding.left + hBorderWidth,\n    y: y + padding.top + hBorderWidth,\n    width: width - padding.left - padding.right - options.borderWidth,\n    height: height - padding.top - padding.bottom - options.borderWidth\n  };\n}\n\nfunction isPointInRange(element, callout, position) {\n  const {pointX, pointY} = element;\n  const margin = callout.margin;\n  let x = pointX;\n  let y = pointY;\n  if (position === 'left') {\n    x += margin;\n  } else if (position === 'right') {\n    x -= margin;\n  } else if (position === 'top') {\n    y += margin;\n  } else if (position === 'bottom') {\n    y -= margin;\n  }\n  return element.inRange(x, y);\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst rangeLimit = (mouseX, mouseY, {x, y, x2, y2}, axis) => axis === 'y' ? {start: Math.min(y, y2), end: Math.max(y, y2), value: mouseY} : {start: Math.min(x, x2), end: Math.max(x, x2), value: mouseX};\n// http://www.independent-software.com/determining-coordinates-on-a-html-canvas-bezier-curve.html\nconst coordInCurve = (start, cp, end, t) => (1 - t) * (1 - t) * start + 2 * (1 - t) * t * cp + t * t * end;\nconst pointInCurve = (start, cp, end, t) => ({x: coordInCurve(start.x, cp.x, end.x, t), y: coordInCurve(start.y, cp.y, end.y, t)});\nconst coordAngleInCurve = (start, cp, end, t) => 2 * (1 - t) * (cp - start) + 2 * t * (end - cp);\nconst angleInCurve = (start, cp, end, t) => -Math.atan2(coordAngleInCurve(start.x, cp.x, end.x, t), coordAngleInCurve(start.y, cp.y, end.y, t)) + 0.5 * PI;\n\nclass LineAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const hBorderWidth = this.options.borderWidth / 2;\n    if (axis !== 'x' && axis !== 'y') {\n      const point = {mouseX, mouseY};\n      const {path, ctx} = this;\n      if (path) {\n        setBorderStyle(ctx, this.options);\n        const {chart} = this.$context;\n        const mx = mouseX * chart.currentDevicePixelRatio;\n        const my = mouseY * chart.currentDevicePixelRatio;\n        const result = ctx.isPointInStroke(path, mx, my) || isOnLabel(this, point, useFinalPosition);\n        ctx.restore();\n        return result;\n      }\n      const epsilon = sqr(hBorderWidth);\n      return intersects(this, point, epsilon, useFinalPosition) || isOnLabel(this, point, useFinalPosition);\n    }\n    return inAxisRange(this, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition});\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, cp, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    if (options.curve && cp) {\n      drawCurve(ctx, this, cp, length);\n      return ctx.restore();\n    }\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    const area = resolveLineProperties(chart, options);\n    const {x, y, x2, y2} = area;\n    const inside = isLineInArea(area, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n    properties.centerX = (x2 + x) / 2;\n    properties.centerY = (y2 + y) / 2;\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    if (options.curve) {\n      const p1 = {x: properties.x, y: properties.y};\n      const p2 = {x: properties.x2, y: properties.y2};\n      properties.cp = getControlPoint(properties, options, distanceBetweenPoints(p1, p2));\n    }\n    const labelProperties = resolveLabelElementProperties(chart, properties, options.label);\n    // additonal prop to manage zoom/pan\n    labelProperties._visible = inside;\n\n    properties.elements = [{\n      type: 'label',\n      optionScope: 'label',\n      properties: labelProperties,\n      initProperties: properties.initProperties\n    }];\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  display: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    display: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  curve: false,\n  controlPoint: {\n    y: '-50%'\n  },\n  display: true,\n  endValue: undefined,\n  init: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    callout: Object.assign({}, LabelAnnotation.defaults.callout),\n    color: '#fff',\n    content: null,\n    display: false,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    opacity: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    yAdjust: 0,\n    z: undefined\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction inAxisRange(element, {mouseX, mouseY}, axis, {hBorderWidth, useFinalPosition}) {\n  const limit = rangeLimit(mouseX, mouseY, element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), axis);\n  return (limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth) || isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis);\n}\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nfunction intersects(element, {mouseX, mouseY}, epsilon = EPSILON, useFinalPosition) {\n  // Adapted from https://stackoverflow.com/a/6853926/25507\n  const {x: x1, y: y1, x2, y2} = element.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const lenSq = sqr(dx) + sqr(dy);\n  const t = lenSq === 0 ? -1 : ((mouseX - x1) * dx + (mouseY - y1) * dy) / lenSq;\n  let xx, yy;\n  if (t < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (t > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + t * dx;\n    yy = y1 + t * dy;\n  }\n  return (sqr(mouseX - xx) + sqr(mouseY - yy)) <= epsilon;\n}\n\nfunction isOnLabel(element, {mouseX, mouseY}, useFinalPosition, axis) {\n  const label = element.label;\n  return label.options.display && label.inRange(mouseX, mouseY, axis, useFinalPosition);\n}\n\nfunction resolveLabelElementProperties(chart, properties, options) {\n  const borderWidth = options.borderWidth;\n  const padding = toPadding(options.padding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  return calculateLabelPosition(properties, options, {width, height, padding}, chart.chartArea);\n}\n\nfunction calculateAutoRotation(properties) {\n  const {x, y, x2, y2} = properties;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction calculateLabelPosition(properties, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: properties.x, y: properties.y};\n  const p2 = {x: properties.x2, y: properties.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(properties) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(properties, label, {labelSize: size, padding}, chartArea);\n  const pt = properties.cp ? pointInCurve(p1, properties.cp, p2, t) : pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n  const centerX = adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust;\n  const centerY = adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust;\n  return {\n    x: centerX - (width / 2),\n    y: centerY - (height / 2),\n    x2: centerX + (width / 2),\n    y2: centerY + (height / 2),\n    centerX,\n    centerY,\n    pointX: pt.x,\n    pointY: pt.y,\n    width,\n    height,\n    rotation: toDegrees(rotation)\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(properties, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(properties, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: properties.x2 - properties.x, h: properties.y2 - properties.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: properties.x - properties.x2, h: properties.y - properties.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(properties, chartArea) {\n  const {x, x2, y, y2} = properties;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nfunction getControlPoint(properties, options, distance) {\n  const {x, y, x2, y2, centerX, centerY} = properties;\n  const angle = Math.atan2(y2 - y, x2 - x);\n  const cp = toPosition(options.controlPoint, 0);\n  const point = {\n    x: centerX + getSize(distance, cp.x, false),\n    y: centerY + getSize(distance, cp.y, false)\n  };\n  return rotated(point, {x: centerX, y: centerY}, angle);\n}\n\nfunction drawArrowHeadOnCurve(ctx, {x, y}, {angle, adjust}, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.display) {\n    return;\n  }\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.rotate(angle);\n  drawArrowHead(ctx, 0, -adjust, arrowOpts);\n  ctx.restore();\n}\n\nfunction drawCurve(ctx, element, cp, length) {\n  const {x, y, x2, y2, options} = element;\n  const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(element);\n  const p1 = {x, y};\n  const p2 = {x: x2, y: y2};\n  const startAngle = angleInCurve(p1, cp, p2, 0);\n  const endAngle = angleInCurve(p1, cp, p2, 1) - PI;\n  const ps = pointInCurve(p1, cp, p2, startAdjust / length);\n  const pe = pointInCurve(p1, cp, p2, 1 - endAdjust / length);\n\n  const path = new Path2D();\n  ctx.beginPath();\n  path.moveTo(ps.x, ps.y);\n  path.quadraticCurveTo(cp.x, cp.y, pe.x, pe.y);\n  ctx.shadowColor = options.borderShadowColor;\n  ctx.stroke(path);\n  element.path = path;\n  element.ctx = ctx;\n  drawArrowHeadOnCurve(ctx, ps, {angle: startAngle, adjust: startAdjust}, startOpts);\n  drawArrowHeadOnCurve(ctx, pe, {angle: endAngle, adjust: endAdjust}, endOpts);\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const rotation = this.options.rotation;\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height', 'centerX', 'centerY'], useFinalPosition), rotation, borderWidth);\n    }\n    const {x, y, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2} : {start: x, end: x2};\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-rotation));\n    return rotatedPoint[axis] >= limit.start - hBorderWidth - EPSILON && rotatedPoint[axis] <= limit.end + hBorderWidth + EPSILON;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {width, height, centerX, centerY, options} = this;\n    ctx.save();\n    translate(ctx, this.getCenterPoint(), options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(centerX, centerY, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  get label() {\n    return this.elements && this.elements[0];\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolveBoxAndLabelProperties(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  label: Object.assign({}, BoxAnnotation.defaults.label),\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  z: 0\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nEllipseAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {width, height, centerX, centerY} = ellipse;\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - centerX) + sinAngle * (p.y - centerY), 2);\n  const b = Math.pow(sinAngle * (p.x - centerX) - cosAngle * (p.y - centerY), 2);\n  return (a / Math.pow(xRadius + hBorderWidth, 2)) + (b / Math.pow(yRadius + hBorderWidth, 2)) <= 1.0001;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    const {x, y, x2, y2, width} = this.getProps(['x', 'y', 'x2', 'y2', 'width'], useFinalPosition);\n    const borderWidth = this.options.borderWidth;\n    if (axis !== 'x' && axis !== 'y') {\n      return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, borderWidth);\n    }\n    const hBorderWidth = borderWidth / 2;\n    const limit = axis === 'y' ? {start: y, end: y2, value: mouseY} : {start: x, end: x2, value: mouseX};\n    return limit.value >= limit.start - hBorderWidth && limit.value <= limit.end + hBorderWidth;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    drawPoint(ctx, this, this.centerX, this.centerY);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    properties.initProperties = initAnimationProperties(chart, properties, options);\n    return properties;\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n\n  inRange(mouseX, mouseY, axis, useFinalPosition) {\n    if (axis !== 'x' && axis !== 'y') {\n      return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n    }\n    const rotatedPoint = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    const axisPoints = this.elements.map((point) => axis === 'y' ? point.bY : point.bX);\n    const start = Math.min(...axisPoints);\n    const end = Math.max(...axisPoints);\n    return rotatedPoint[axis] >= start && rotatedPoint[axis] <= end;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const properties = resolvePointProperties(chart, options);\n    const {sides, rotation} = options;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const elProps = buildPointElement(properties, options, rad);\n      elProps.initProperties = initAnimationProperties(chart, properties, options);\n      elements.push(elProps);\n    }\n    properties.elements = elements;\n    return properties;\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  init: undefined,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: undefined,\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: undefined,\n  yValue: undefined,\n  z: 0\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction buildPointElement({centerX, centerY}, {radius, borderWidth}, rad) {\n  const halfBorder = borderWidth / 2;\n  const sin = Math.sin(rad);\n  const cos = Math.cos(rad);\n  const point = {x: centerX + sin * radius, y: centerY - cos * radius};\n  return {\n    type: 'point',\n    optionScope: 'point',\n    properties: {\n      x: point.x,\n      y: point.y,\n      centerX: point.x,\n      centerY: point.y,\n      bX: centerX + sin * (radius + halfBorder),\n      bY: centerY - cos * (radius + halfBorder)\n    }\n  };\n}\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation.common'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nconst hooks$1 = eventHooks.concat(elementHooks);\nconst resolve = (value, optDefs) => isObject(optDefs) ? resolveObj(value, optDefs) : value;\n\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").UpdateMode } UpdateMode\n * @typedef { import('../../types/options').AnnotationPluginOptions } AnnotationPluginOptions\n */\n\n/**\n * @param {string} prop\n * @returns {boolean}\n */\nconst isIndexable = (prop) => prop === 'color' || prop === 'font';\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * @param {Chart} chart\n * @param {Object} state\n * @param {AnnotationPluginOptions} options\n * @param {UpdateMode} mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties.elements, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    Object.assign(element, properties.initProperties);\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, elements, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, definition.initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    Object.assign(element, initProperties);\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks$1) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    if (isIndexable(prop) && isArray(value)) {\n      result[prop] = value.map((item) => resolve(item, optDefs));\n    } else {\n      result[prop] = resolve(value, optDefs);\n    }\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar version = \"3.0.1\";\n\nconst chartStates = new Map();\nconst hooks = eventHooks.concat(elementHooks);\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  beforeRegister() {\n    requireVersion('chart.js', '4.0', Chart.version);\n  },\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false,\n      hooks: {},\n      hooked: false,\n      hovered: []\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n    updateHooks(chart, state, options);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    if (handleEvent(state, args.event, options)) {\n      args.changed = true;\n    }\n  },\n\n  afterDestroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'centerX', 'centerY', 'pointX', 'pointY', 'radius'],\n        type: 'number'\n      },\n    },\n    clip: true,\n    interaction: {\n      mode: undefined,\n      axis: undefined,\n      intersect: undefined\n    },\n    common: {\n      drawTime: 'afterDatasetsDraw',\n      init: false,\n      label: {\n      }\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop) && prop !== 'init',\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`\n    },\n    interaction: {\n      _fallback: true\n    },\n    common: {\n      label: {\n        _indexable: isIndexable,\n        _fallback: true\n      },\n      _indexable: isIndexable\n    }\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  const drawableElements = getDrawableElements(state.visibleElements, caller).sort((a, b) => a.element.options.z - b.element.options.z);\n  for (const item of drawableElements) {\n    drawElement(ctx, chartArea, state, item);\n  }\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n}\n\nfunction getDrawableElements(elements, caller) {\n  const drawableElements = [];\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      drawableElements.push({element: el, main: true});\n    }\n    if (el.elements && el.elements.length) {\n      for (const sub of el.elements) {\n        if (sub.options.display && sub.options.drawTime === caller) {\n          drawableElements.push({element: sub});\n        }\n      }\n    }\n  }\n  return drawableElements;\n}\n\nfunction drawElement(ctx, chartArea, state, item) {\n  const el = item.element;\n  if (item.main) {\n    invokeHook(state, el, 'beforeDraw');\n    el.draw(ctx, chartArea);\n    invokeHook(state, el, 'afterDraw');\n  } else {\n    el.draw(ctx, chartArea);\n  }\n}\n\nexport { annotation as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}